import{d as k,r as S,e as m,c as i,o as c,a as s,F as f,f as _,n as y,t as l,_ as v}from"./index-CFpwx9AY.js";const D=["id"],F={class:"grid"},w={class:"circle-wrapper"},B={class:"progress-ring",width:"160",height:"160"},b=["stroke","data-progress"],x={class:"circle-text"},d=70,C=k({__name:"SkillsSection",props:{id:{}},setup(h){const o=2*Math.PI*d,u=[{title:"Frontend",progress:90,color:"#4CAF50",items:["Vue","HTML5 / CSS3","JavaScript / TypeScript","Bootstrap / Tailwind CSS","RWD"]},{title:"Backend & Frameworks",progress:75,color:"#2196F3",items:["Django","Laravel"]},{title:"Databases",progress:70,color:"#FF9800",items:["MySQL","MongoDB","PostgreSQL"]},{title:"Others",progress:80,color:"#9C27B0",items:["Git","AWS","Python","GPT API"]}],p=S([]);return m(()=>{const g=new IntersectionObserver(t=>{t.forEach(e=>{const r=e.target.querySelector(".progress-ring__circle");if(!r)return;const a=Number(r.dataset.progress);if(e.isIntersecting){const n=o-a/100*o;r.style.transition="stroke-dashoffset 1.2s ease-out",r.style.strokeDashoffset=String(n)}else r.style.transition="none",r.style.strokeDashoffset=String(o)})},{threshold:.5});p.value.forEach(t=>g.observe(t))}),(g,t)=>(c(),i("section",{id:h.id,class:"section skills"},[t[0]||(t[0]=s("h2",{class:"title"},"skills",-1)),s("div",F,[(c(),i(f,null,_(u,(e,r)=>s("div",{key:r,class:"card",ref_for:!0,ref_key:"circles",ref:p},[s("div",w,[(c(),i("svg",B,[s("circle",{class:"progress-ring__bg",stroke:"#eee","stroke-width":"12",fill:"transparent",r:d,cx:80,cy:80}),s("circle",{class:"progress-ring__circle",stroke:e.color,"stroke-width":"12",fill:"transparent",r:d,cx:80,cy:80,style:y({strokeDasharray:o,strokeDashoffset:o}),"data-progress":e.progress},null,12,b)])),s("div",x,l(e.progress)+"%",1)]),s("h3",null,l(e.title),1),s("ul",null,[(c(!0),i(f,null,_(e.items,(a,n)=>(c(),i("li",{key:n},l(a),1))),128))])])),64))])],8,D))}}),L=v(C,[["__scopeId","data-v-97489f70"]]);export{L as default};
